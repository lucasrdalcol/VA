function [allData, scenario, sensors] = TP2_Cenario_5()
%TP2_Cenario_5 - Returns sensor detections
%    allData = TP2_Cenario_5 returns sensor detections in a structure
%    with time for an internally defined scenario and sensor suite.
%
%    [allData, scenario, sensors] = TP2_Cenario_5 optionally returns
%    the drivingScenario and detection generator objects.

% Generated by MATLAB(R) 9.11 (R2021b) and Automated Driving Toolbox 3.4 (R2021b).
% Generated on: 09-Feb-2022 15:17:58

% Create the drivingScenario object and ego car
[scenario, egoVehicle] = createDrivingScenario;

% Create all the sensors
[sensors, numSensors] = createSensors(scenario);

allData = {};

%%%%%%%%%%%%%%%%%%%%
% Helper functions %
%%%%%%%%%%%%%%%%%%%%

% Units used in createSensors and createDrivingScenario
% Distance/Position - meters
% Speed             - meters/second
% Angles            - degrees
% RCS Pattern       - dBsm

function [sensors, numSensors] = createSensors(scenario)
% createSensors Returns all sensor objects to generate detections

% Assign into each sensor the physical and radar profiles for all actors
profiles = actorProfiles(scenario);
sensors{1} = visionDetectionGenerator('SensorIndex', 1, ...
    'SensorLocation', [1.9 0], ...
    'DetectorOutput', 'Objects only', ...
    'Intrinsics', cameraIntrinsics([1000 1000],[960 540],[1080 1920]), ...
    'ActorProfiles', profiles);
sensors{2} = visionDetectionGenerator('SensorIndex', 2, ...
    'SensorLocation', [2.8 0.9], ...
    'Yaw', 87.2208331359279, ...
    'MaxRange', 50, ...
    'DetectorOutput', 'Objects only', ...
    'Intrinsics', cameraIntrinsics([1000 1000],[960 540],[1080 1920]), ...
    'ActorProfiles', profiles);
sensors{3} = visionDetectionGenerator('SensorIndex', 3, ...
    'SensorLocation', [2.8 -0.9], ...
    'Yaw', -87.0492208909937, ...
    'MaxRange', 50, ...
    'DetectorOutput', 'Objects only', ...
    'Intrinsics', cameraIntrinsics([1000 1000],[960 540],[1080 1920]), ...
    'ActorProfiles', profiles);
sensors{4} = visionDetectionGenerator('SensorIndex', 4, ...
    'SensorLocation', [0 0], ...
    'Yaw', -180, ...
    'DetectorOutput', 'Objects only', ...
    'Intrinsics', cameraIntrinsics([1000 1000],[960 540],[1080 1920]), ...
    'ActorProfiles', profiles);
numSensors = 4;

function [scenario, egoVehicle] = createDrivingScenario
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Construct a drivingScenario object.
scenario = drivingScenario('StopTime', 30);

% Add all road segments
roadCenters = [-107.4 0.3 0;
    -73.3 0 0;
    -29.4 0 0;
    12.1 -0.6 0;
    40.9 -0.9 0;
    84.5 0.3 0;
    119.3 0.6 0];
laneSpecification = lanespec(2);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');

% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-104.63 -1.57 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car');

% Add the non-ego actors
car1 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-77.72 -2.03 0.01], ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [0.466 0.674 0.188], ...
    'Name', 'Car1');
waypoints = [-77.72 -2.03 0.01;
    -62.6 -2.1 0;
    -43.8 -2.1 0;
    -26.3 -2.1 0;
    -11.7 -2.4 0;
    8.6 -2.7 0;
    23.8 -2.7 0;
    38.4 -3 0;
    54.7 -3.2 0;
    70.5 -1.6 0;
    85.7 -1.3 0;
    101.5 -1 0;
    116.9 -1 0];
speed = [8;8;8;8;8;8;8;8;8;8;8;8;8];
trajectory(car1, waypoints, speed);

vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [-77.47 9.07 0], ...
    'Yaw', -84, ...
    'Mesh', driving.scenario.carMesh, ...
    'PlotColor', [0.301 0.745 0.933], ...
    'Name', 'Car2');

actor(scenario, ...
    'ClassID', 3, ...
    'Length', 1.7, ...
    'Width', 0.45, ...
    'Height', 1.7, ...
    'Position', [-55.28 -5.06 0], ...
    'Mesh', driving.scenario.bicycleMesh, ...
    'PlotColor', [0.635 0.078 0.184], ...
    'Name', 'Bicycle');

actor(scenario, ...
    'ClassID', 4, ...
    'Length', 0.24, ...
    'Width', 0.45, ...
    'Height', 1.7, ...
    'Position', [-37.6 5 0], ...
    'RCSPattern', [-8 -8;-8 -8], ...
    'Mesh', driving.scenario.pedestrianMesh, ...
    'PlotColor', [0 0.447 0.741], ...
    'Name', 'Pedestrian');

